name: release-mods-latest

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure mods exist
        id: check_mods
        run: |
          if [ ! -d "mods" ] || [ -z "$(ls -A mods | grep -vE '^\.git(ignore|keep)$')" ]; then
            echo "has_mods=false" >> $GITHUB_OUTPUT
          else
            echo "has_mods=true" >> $GITHUB_OUTPUT
          fi

      - name: Create zip
        if: steps.check_mods.outputs.has_mods == 'true'
        run: |
          mkdir -p dist
          zip -r dist/mods.zip mods -x "mods/.gitignore" "mods/.gitkeep"

      - name: Upload to 'mods-latest' release (create or update)
        if: steps.check_mods.outputs.has_mods == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: mods-latest
          release_name: "mods â€“ latest"
          body: "Auto-updated on push to main. Commit: ${{ github.sha }}"
          overwrite: true
          file: dist/mods.zip
          asset_name: mods.zip

      - name: Upload checksums (optional)
        if: steps.check_mods.outputs.has_mods == 'true'
        run: |
          (cd dist && sha256sum mods.zip > checksums.txt)
        shell: bash

      - name: Upload checksum file
        if: steps.check_mods.outputs.has_mods == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: mods-latest
          overwrite: true
          file: dist/checksums.txt
          asset_name: checksums.txt
