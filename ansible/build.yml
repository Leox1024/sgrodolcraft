---
# build artifact on mc host: always package and write config-<sha>.zip + manifest
- name: build artifacts on mc host
  hosts: all
  become: yes
  become_user: root
  become_method: sudo
  
  vars:
    # repo checked out by semaphore on controller
    repo_root: "{{ playbook_dir | dirname }}"

    # artifact location on mc vm
    artifacts_dir: "/srv/mc/artifacts"

    # commit sha taken from controller repo (unique id for artifact)
    commit_sha: "{{ lookup('pipe', 'git -C ' ~ repo_root ~ ' rev-parse HEAD') | trim }}"

    # package set (what to include)
    build_cfg: "{{ lookup('file', repo_root ~ '/.mc-build.yml') | from_yaml }}"
    package_globs: "{{ build_cfg.package | default([]) }}"

    # paths on mc
    manifest_path: "{{ artifacts_dir }}/config-{{ commit_sha }}.json"
    zip_path: "{{ artifacts_dir }}/config-{{ commit_sha }}.zip"
    stage_dir: "/tmp/sgrodocraft_build_{{ commit_sha }}"

  pre_tasks:
    - name: ensure tools exist (zip/unzip)
      package:
        name: "{{ item }}"
        state: present
      loop:
        - zip
        - unzip

    - name: ensure artifacts dir on mc
      file:
        path: "{{ artifacts_dir }}"
        state: directory
        mode: "0755"

  tasks:
    - name: prepare staging dir on mc
      file:
        path: "{{ stage_dir }}"
        state: directory
        mode: "0755"

    # sync only the package set from controller â†’ mc staging
    - name: sync package set to staging
      delegate_to: localhost
      synchronize:
        src: "{{ item }}"
        dest: "{{ stage_dir }}/"
        archive: yes
      with_items: "{{ package_globs | map('regex_replace', '^(.*)$', repo_root ~ '/\\1') | list }}"

    - name: create zip on mc
      archive:
        path: "{{ stage_dir }}/"
        dest: "{{ zip_path }}"
        format: zip
        remove: no

    - name: compute sha256 on mc
      command: sha256sum "{{ zip_path }}"
      register: sha
      changed_when: false

    - name: write manifest on mc
      copy:
        dest: "{{ manifest_path }}"
        mode: "0644"
        content: |
          {
            "commit": "{{ commit_sha }}",
            "created_at": "{{ lookup('pipe','date -Iseconds') | trim }}",
            "zip": "{{ zip_path }}",
            "sha256": "{{ (sha.stdout.split()[0]) | default('') }}"
          }

    - name: update latest pointers on mc
      copy:
        dest: "{{ artifacts_dir }}/latest.txt"
        content: "{{ commit_sha }}\n"
        mode: "0644"
    - file:
        src: "{{ zip_path }}"
        dest: "{{ artifacts_dir }}/config-latest.zip"
        state: link
        force: yes

    - name: cleanup staging on mc
      file:
        path: "{{ stage_dir }}"
        state: absent

    - name: cleanup old artifacts (keep last 10)
      shell: |
        ls -1t {{ artifacts_dir }}/config-*.zip | tail -n +11 | xargs -r rm -f
        ls -1t {{ artifacts_dir }}/config-*.json | tail -n +11 | xargs -r rm -f
      args:
        warn: false
      changed_when: false
