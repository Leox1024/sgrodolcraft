---
# build artifact on mc host: always package and write config-<sha>.zip + manifest
- name: build artifacts on mc host
  hosts: all
  become: yes
  become_user: root
  become_method: sudo


vars:
    repo_url: "https://github.com/Leox1024/sgrodolcraft.git"
    repo_dir: "/home/mc/sgrodolcraft-src"
    artifacts_dir: "/srv/mc/artifacts"
    stage_dir: "/tmp/sgrodolcraft_build"
    commit_sha: "{{ lookup('pipe', 'git -C ' ~ repo_dir ~ ' rev-parse HEAD || echo none') | trim }}"

  pre_tasks:
    - name: ensure base tools installed
      package:
        name: [git, zip, unzip]
        state: present

    - name: ensure artifacts dir exists
      file:
        path: "{{ artifacts_dir }}"
        state: directory
        mode: "0755"

  tasks:
    - name: clone or update repo directly on mc
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        version: main
        force: yes

    - name: get latest commit sha
      command: git -C "{{ repo_dir }}" rev-parse HEAD
      register: gitsha
      changed_when: false
    - set_fact:
        commit_sha: "{{ gitsha.stdout }}"

    - name: prepare stage dir
      file:
        path: "{{ stage_dir }}"
        state: directory
        mode: "0755"

    - name: copy selected files to stage dir
      shell: |
        cp -r {{ repo_dir }}/server.properties {{ stage_dir }}/ 2>/dev/null || true
        cp -r {{ repo_dir }}/config {{ stage_dir }}/ 2>/dev/null || true
        cp -r {{ repo_dir }}/plugins {{ stage_dir }}/ 2>/dev/null || true
        cp -r {{ repo_dir }}/mods {{ stage_dir }}/ 2>/dev/null || true
        cp -r {{ repo_dir }}/run.sh {{ repo_dir }}/user_jvm_args.txt {{ stage_dir }}/ 2>/dev/null || true
      args:
        executable: /bin/bash

    - name: create zip file
      archive:
        path: "{{ stage_dir }}/"
        dest: "{{ artifacts_dir }}/config-{{ commit_sha }}.zip"
        format: zip

    - name: write manifest file
      copy:
        dest: "{{ artifacts_dir }}/config-{{ commit_sha }}.json"
        mode: "0644"
        content: |
          {
            "commit": "{{ commit_sha }}",
            "created_at": "{{ lookup('pipe', 'date -Iseconds') | trim }}",
            "zip": "config-{{ commit_sha }}.zip"
          }

    - name: update latest symlinks
      file:
        src: "{{ artifacts_dir }}/config-{{ commit_sha }}.zip"
        dest: "{{ artifacts_dir }}/config-latest.zip"
        state: link
        force: yes
    - copy:
        dest: "{{ artifacts_dir }}/latest.txt"
        content: "{{ commit_sha }}\n"

    - name: cleanup stage
      file:
        path: "{{ stage_dir }}"
        state: absent

    - name: cleanup old artifacts (keep last 10)
      shell: |
        ls -1t {{ artifacts_dir }}/config-*.zip | tail -n +11 | xargs -r rm -f
        ls -1t {{ artifacts_dir }}/config-*.json | tail -n +11 | xargs -r rm -f
      args:
        warn: false
      changed_when: false
