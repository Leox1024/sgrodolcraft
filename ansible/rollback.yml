---
# rollback to the previous build relative to the one currently deployed
# no automatic rollback; run manually when needed
- name: rollback config to previous build (in-place)
  hosts: mc_host
  become: yes
  become_user: root
  become_method: su

  vars:
    target_dir: /home/mc/minecraft-survival
    service_name: mc-survival-java
    mc_port: 25565

    artifacts_dir: "/srv/mc/artifacts"
    stage_dir: "/tmp/sgrodocraft_rollback"

  tasks:
    - name: read current deployed commit from target
      slurp:
        src: "{{ target_dir }}/.last_good_commit"
      register: current_sha_file
      failed_when: false

    - name: fail if current commit marker is missing
      fail:
        msg: "current commit marker not found on target (file .last_good_commit). run a normal deploy first."
      when: current_sha_file.content is not defined

    - name: set current_sha fact
      set_fact:
        current_sha: "{{ (current_sha_file.content | b64decode).strip() }}"

    - name: compute previous sha on controller
      delegate_to: localhost
      shell: |
        set -e
        cur="{{ current_sha }}"
        mapfile -t list < <(ls -1t {{ artifacts_dir }}/config-*.zip 2>/dev/null | sed -E 's|.*/config-([^.]+)\.zip|\1|')
        for i in "${!list[@]}"; do
          if [[ "${list[$i]}" == "$cur" ]]; then
            j=$((i+1))
            if [[ $j -lt ${#list[@]} ]]; then
              echo -n "${list[$j]}"
              exit 0
            fi
          fi
        done
        exit 1
      register: prev_sha_cmd
      changed_when: false

    - name: fail if there is no previous build
      fail:
        msg: "no previous artifact found for current sha {{ current_sha }}"
      when: prev_sha_cmd.rc != 0 or prev_sha_cmd.stdout | length == 0

    - name: define previous sha and artifact path
      set_fact:
        prev_sha: "{{ prev_sha_cmd.stdout }}"
        prev_zip_local: "{{ artifacts_dir }}/config-{{ prev_sha }}.zip"

    - name: stop minecraft service before rollback
      systemd: { name: "{{ service_name }}", state: stopped }
      ignore_errors: yes

    - name: create staging dir on target
      file: { path: "{{ stage_dir }}", state: directory, mode: "0755" }

    - name: copy previous artifact from controller to target
      copy:
        src: "{{ prev_zip_local }}"
        dest: "{{ stage_dir }}/config.zip"
        mode: "0644"
      delegate_to: localhost

    - name: unarchive previous artifact into staging
      unarchive:
        src: "{{ stage_dir }}/config.zip"
        dest: "{{ stage_dir }}"
        remote_src: yes

    - name: rsync staging to target preserving state
      synchronize:
        src: "{{ stage_dir }}/"
        dest: "{{ target_dir }}/"
        archive: yes
        delete: no
        rsync_opts:
          - "--exclude=world/"
          - "--exclude=logs/"
          - "--exclude=crash-reports/"
          - "--exclude=*.lock"
          - "--exclude=eula.txt"
          - "--exclude=backups/"
      delegate_to: "{{ inventory_hostname }}"

    - name: cleanup staging
      file: { path: "{{ stage_dir }}", state: absent }

    - name: start minecraft service after rollback
      systemd: { name: "{{ service_name }}", state: started, enabled: yes }

    - name: health-check on tcp port
      wait_for: { host: 127.0.0.1, port: "{{ mc_port }}", delay: 2, timeout: 60 }

    - name: update deployed commit marker to previous sha
      copy:
        content: "{{ prev_sha }}\n"
        dest: "{{ target_dir }}/.last_good_commit"
        owner: mc
        group: mc
        mode: "0644"

    - name: show result
      debug:
        msg: "rolled back to previous build {{ prev_sha }}"